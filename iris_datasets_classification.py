# -*- coding: utf-8 -*-
"""Iris Datasets Classification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vOFfedMqdqDjktnXLop0mKT7-8YJDnh6

# **1. Import Library**

# **2. Read Dataset**
"""

import pandas as pd
from sklearn import datasets

# Memuat dataset Iris dari scikit-learn
iris = datasets.load_iris()

X = iris.data    # input untuk machine learning
y = iris.target  # output yang dinginkan dari machine learning

# Mengonversi data fitur dan target menjadi DataFrame
df_x = pd.DataFrame(X, columns=iris.feature_names)
df_y = pd.Series(y, name='target')

df_x

df_y

# Gabungkan fitur dan target dalam satu DataFrame
df = pd.concat([df_X, df_y], axis=1)

df.head(10)

df.info()

df['target'].unique()

df.describe()

"""# **3. Split Data**"""

from sklearn.model_selection import train_test_split

# Membagi data menjadi train dan test
X_train, X_test, y_train, y_test = train_test_split(df_X, df_y, test_size=0.2, random_state=42)

"""# **4. Train the Model**"""

from sklearn.ensemble import RandomForestClassifier

# Membuat dan melatih model Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

"""# **5. Predict and Evaluate**"""

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Memprediksi dan mengevaluasi
y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)

print("Laporan Klasifikasi:")
print(f"Akurasi: {accuracy * 100:.2f}%")

import seaborn as sns
import matplotlib.pyplot as plt

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)

# Plot Confusion Matrix using seaborn
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues",
            xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel("Prediksi")
plt.ylabel("Aktual")
plt.title("Confusion Matrix")
plt.show()

from sklearn.metrics import accuracy_score, classification_report

print(classification_report(y_test, y_pred, target_names=iris.target_names))